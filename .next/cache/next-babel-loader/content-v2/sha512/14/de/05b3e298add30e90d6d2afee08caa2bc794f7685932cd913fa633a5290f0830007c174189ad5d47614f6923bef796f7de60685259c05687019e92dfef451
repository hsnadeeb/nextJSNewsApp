{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hadee\\\\Desktop\\\\sharpnerProjects\\\\nextJSNewsApp\\\\pages\\\\about\\\\[id].js\",\n    _s = $RefreshSig$();\n\n// pages/aboutus/[id].js\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport { details } from './data'; // Import the hardcoded developer details\n\nfunction AboutDeveloper() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState = useState(null),\n      developer = _useState[0],\n      setDeveloper = _useState[1];\n\n  useEffect(function () {\n    // Check if router.query is not empty and id is a number\n    if (router.query && router.query.id) {\n      var developerId = parseInt(router.query.id);\n      var foundDeveloper = details.find(function (dev) {\n        return dev.id === developerId;\n      });\n      setDeveloper(foundDeveloper);\n    }\n  }, [router.query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: developer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: developer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: developer.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Developer doesn't exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AboutDeveloper, \"JJLKe9wX5L5VP6R/HkDyQ5HBmIE=\", false, function () {\n  return [useRouter];\n});\n\n_c = AboutDeveloper;\nexport default AboutDeveloper;\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutDeveloper\");","map":{"version":3,"sources":["C:/Users/hadee/Desktop/sharpnerProjects/nextJSNewsApp/pages/about/[id].js"],"names":["useRouter","useEffect","useState","details","AboutDeveloper","router","id","query","developer","setDeveloper","developerId","parseInt","foundDeveloper","find","dev","name","role"],"mappings":";;;;;;AAAA;AAEA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,QAAxB,C,CAAkC;;AAElC,SAASC,cAAT,GAA0B;AAAA;;AACxB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AADwB,MAEhBM,EAFgB,GAETD,MAAM,CAACE,KAFE,CAEhBD,EAFgB;;AAAA,kBAGUJ,QAAQ,CAAC,IAAD,CAHlB;AAAA,MAGjBM,SAHiB;AAAA,MAGNC,YAHM;;AAKxBR,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAII,MAAM,CAACE,KAAP,IAAgBF,MAAM,CAACE,KAAP,CAAaD,EAAjC,EAAqC;AACnC,UAAMI,WAAW,GAAGC,QAAQ,CAACN,MAAM,CAACE,KAAP,CAAaD,EAAd,CAA5B;AACA,UAAMM,cAAc,GAAGT,OAAO,CAACU,IAAR,CAAa,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACR,EAAJ,KAAWI,WAAf;AAAA,OAAhB,CAAvB;AACAD,MAAAA,YAAY,CAACG,cAAD,CAAZ;AACD;AACF,GAPQ,EAON,CAACP,MAAM,CAACE,KAAR,CAPM,CAAT;AASA,sBACE;AAAA,cACGC,SAAS,gBACR;AAAA,8BACE;AAAA,kBAAKA,SAAS,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIP,SAAS,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADQ,gBAMR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA1BQZ,c;UACQJ,S;;;KADRI,c;AA4BT,eAAeA,cAAf","sourcesContent":["// pages/aboutus/[id].js\r\n\r\nimport { useRouter } from 'next/router';\r\nimport { useEffect, useState } from 'react';\r\nimport { details } from './data'; // Import the hardcoded developer details\r\n\r\nfunction AboutDeveloper() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const [developer, setDeveloper] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if router.query is not empty and id is a number\r\n    if (router.query && router.query.id) {\r\n      const developerId = parseInt(router.query.id);\r\n      const foundDeveloper = details.find(dev => dev.id === developerId);\r\n      setDeveloper(foundDeveloper);\r\n    }\r\n  }, [router.query]);\r\n\r\n  return (\r\n    <div>\r\n      {developer ? (\r\n        <>\r\n          <h1>{developer.name}</h1>\r\n          <p>{developer.role}</p>\r\n        </>\r\n      ) : (\r\n        <p>Developer doesn't exist</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutDeveloper;\r\n"]},"metadata":{},"sourceType":"module"}